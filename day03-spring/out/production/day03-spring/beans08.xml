<?xml version="1.0" encoding="UTF-8"?>
<!--xmlns xml namespace:xml命名空间-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p ="http://www.springframework.org/schema/p"
       xmlns:context ="http://www.springframework.org/schema/context"
       xmlns:aop ="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--创建UserService-->
        <bean id="userService" class="edu.xidian.service.IUserServiceImpl"></bean>
        <bean id="studentService" class="edu.xidian.service.StudentService"></bean>
    <!--配置切面对象-->
    <bean id="myAspect" class="edu.xidian.aspect.MyAspect"></bean>
   <!--全自动AOP配置
   1.在bean中配置aop约束
    2.配置aop:config内容，把1接入点和通知结合

    proxy-target-class:使用cglib实现代理
   -->
    <aop:config proxy-target-class="true">
        <!--切入点:
            expression:表达式
            每个service的方法前面都要开启事务和结束事务
            execution(*    edu.xidian.service.*.    *   (..))
            符号代表：返回值 包名              类名 方法名  参数
        -->
        <aop:pointcut id="myPointcut" expression="execution(* edu.xidian.service.*.*(..))"/>
        <!--通知 关联 切入点-->
        <aop:advisor advice-ref="myAspect" pointcut-ref="myPointcut"></aop:advisor>
    </aop:config>

</beans>